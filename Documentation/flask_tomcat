Setting Up the Virtual Environment and Flask for Production.

[Deploy Flask Linux]
Install apache2 , mysql client and server.

install apache2 mysql-client mysql-server

170323 11:14:32 [Note] /usr/sbin/mysqld (mysqld 5.5.54-0+deb8u1) starting as process 20059 ...
Setting up libhtml-template-perl (2.95-1) ...
Setting up mysql-client (5.5.54-0+deb8u1) ...
Setting up mysql-server (5.5.54-0+deb8u1) ...
Setting up ssl-cert (1.0.35) ...
Processing triggers for libc-bin (2.19-18+deb8u1) ...
Processing triggers for systemd (215-17+deb8u2) ...
root@raspberrypi:/#

Install wsgi module for apache2.

install libapache2-mod-wsgi


root@raspberrypi:/# apt-get install libapache2-mod-wsgi
Reading package lists... Done
Building dependency tree
Reading state information... Done
The following NEW packages will be installed:
  libapache2-mod-wsgi
0 upgraded, 1 newly installed, 0 to remove and 309 not upgraded.
Need to get 74.7 kB of archives.
After this operation, 206 kB of additional disk space will be used.
Get:1 http://mirrordirector.raspbian.org/raspbian/ jessie/main libapache2-mod-wsgi armhf 4.3.0-1 [74.7 kB]
Fetched 74.7 kB in 1s (43.3 kB/s)
Selecting previously unselected package libapache2-mod-wsgi.
(Reading database ... 117955 files and directories currently installed.)
Preparing to unpack .../libapache2-mod-wsgi_4.3.0-1_armhf.deb ...
Unpacking libapache2-mod-wsgi (4.3.0-1) ...
Setting up libapache2-mod-wsgi (4.3.0-1) ...
apache2_invoke: Enable module wsgi
root@raspberrypi:/#


Apache2 Enable Module wsgi.

a2enmod wsgi

root@raspberrypi:/# a2enmod wsgi
Module wsgi already enabled
root@raspberrypi:/#


cd /var/www/
mkdir FlaskApp
cd FlaskApp
mkdir FlaskApp
cd FlaskApp
mkdir static
mkdir templates

sudo nano __init__.py

{

from flask import flask
app = Flask(__name__)

@app.route('/')
def homepage():
	return ' Hi, First Page'

if __name__ == '__main__':
	app.run()

}

install python-pip

python-pip is already the newest version.
0 upgraded, 0 newly installed, 0 to remove and 309 not upgraded.
root@raspberrypi:/var/www/FlaskApp/FlaskApp#


pip install virtualenv

virtualenv venv

source venv/bin/activate

root@raspberrypi:/var/www/FlaskApp/FlaskApp# source venv/bin/activate
(venv) root@raspberrypi:/var/www/FlaskApp/FlaskApp#

pip install Flask

(venv) root@raspberrypi:/var/www/FlaskApp/FlaskApp# pip install Flask
Collecting Flask
  Downloading Flask-0.12-py2.py3-none-any.whl (82kB)
    100% |████████████████████████████████| 92kB 164kB/s
Collecting Jinja2>=2.4 (from Flask)
  Downloading Jinja2-2.9.5-py2.py3-none-any.whl (340kB)
    100% |████████████████████████████████| 348kB 159kB/s
Collecting Werkzeug>=0.7 (from Flask)
  Downloading Werkzeug-0.12.1-py2.py3-none-any.whl (312kB)
    100% |████████████████████████████████| 317kB 115kB/s
Collecting click>=2.0 (from Flask)
  Downloading click-6.7-py2.py3-none-any.whl (71kB)
    100% |████████████████████████████████| 71kB 195kB/s
Collecting itsdangerous>=0.21 (from Flask)
  Downloading itsdangerous-0.24.tar.gz (46kB)
    100% |████████████████████████████████| 51kB 216kB/s
Collecting MarkupSafe>=0.23 (from Jinja2>=2.4->Flask)
  Downloading MarkupSafe-1.0.tar.gz
Building wheels for collected packages: itsdangerous, MarkupSafe
  Running setup.py bdist_wheel for itsdangerous ... done
  Stored in directory: /root/.cache/pip/wheels/fc/a8/66/24d655233c757e178d45dea2de22a04c6d92766abfb741129a
  Running setup.py bdist_wheel for MarkupSafe ... done
  Stored in directory: /root/.cache/pip/wheels/88/a7/30/e39a54a87bcbe25308fa3ca64e8ddc75d9b3e5afa21ee32d57
Successfully built itsdangerous MarkupSafe
Installing collected packages: MarkupSafe, Jinja2, Werkzeug, click, itsdangerous, Flask
Successfully installed Flask-0.12 Jinja2-2.9.5 MarkupSafe-1.0 Werkzeug-0.12.1 click-6.7 itsdangerous-0.24
(venv) root@raspberrypi:/var/www/FlaskApp/FlaskApp#



python __init__.py

(venv) root@raspberrypi:/var/www/FlaskApp/FlaskApp# python __init__.py
 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)


It will running the python flask app here ...!!!

ctrl+c

deactivate

root@raspberrypi:/var/www/FlaskApp/FlaskApp# deactivate
root@raspberrypi:/var/www/FlaskApp/FlaskApp#


vi /etc/apache2/sites-available/FlaskApp.conf

<VirtualHost *:80>
		ServerName 192.168.1.50
		ServerAdmin admin@mywebsite.com
		WSGIScriptAlias / /var/www/FlaskApp/flaskapp.wsgi
		<Directory /var/www/FlaskApp/FlaskApp/>
			Order allow,deny
			Allow from all
		</Directory>
		Alias /static /var/www/FlaskApp/FlaskApp/static
		<Directory /var/www/FlaskApp/FlaskApp/static/>
			Order allow,deny
			Allow from all
		</Directory>
		ErrorLog ${APACHE_LOG_DIR}/error.log
		LogLevel warn
		CustomLog ${APACHE_LOG_DIR}/access.log combined
</VirtualHost>

a2ensite FlaskApp

root@raspberrypi:/var/www/FlaskApp/FlaskApp# a2ensite FlaskApp
Enabling site FlaskApp.
To activate the new configuration, you need to run:
  service apache2 reload
root@raspberrypi:/var/www/FlaskApp/FlaskApp#

root@raspberrypi:/var/www/FlaskApp/FlaskApp# service apache2 reload
root@raspberrypi:/var/www/FlaskApp/FlaskApp#


cd /var/www/FlaskApp/

vi flaskapp.wsgi

{

#!/usr/bin/python
import sys
import logging
logging.basicConfig(stream=sys.stderr)
sys.path.insert(0,"/var/www/FlaskApp/")

from FlaskApp import app as application
application.secret_key = 'AAABBBCCCDDDEEE012345'

}

service apache2 restart


Now we are ready to start with Flask site Development

use winscp to access the files and copy the files over there.

BootStrap Starting !!!

<!DOCTYPE html>
<html lang="en">
<head>
		<meta charset="utf-8">
		<title> Pythong Programming Tutorials</title>
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<link href="bootstrap.min.css" rel="stylesheet">

</head>
</html>

Jinja2 template

{{ variables }}
{% Logic %}
{% EndLogic %}

=======
store this below content as main.html under templates folder.

<!DOCTYPE html>
<html lang="en">
<head>
		<meta charset="utf-8">
		<title> Pythong Programming Tutorials</title>
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<link href="{{ url_for('static', filename='css/bootstrap.min.css') }}" rel="stylesheet">
		<link rel="shortcut icon" href="{{ url_for('static', filename='favicon.ico') }} ">
</head>
</html>

-=====
Download bootstrap (css, fonts, js) and move to static
faviicon.ico also under static.

========

Modify __init__.py

{

from flask import flask, render_template
app = Flask(__name__)

@app.route('/')
def homepage():
	return render_template("main.html")

if __name__ == '__main__':
	app.run()

}

====

